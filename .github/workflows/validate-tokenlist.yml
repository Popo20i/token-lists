- name: Extended validation
  run: |
    python3 <<'EOF'
    import json, re, sys

    def validate_eth_address(addr):
        return re.match(r'^0x[a-fA-F0-9]{40}$', addr)

    with open('src/cryptonia20.tokenlist.json') as f:
        data = json.load(f)

    # Validation de base (existant)
    required_root = ["name", "timestamp", "version", "tokens"]
    required_token = ["chainId", "address", "name", "symbol", "decimals"]
    
    for field in required_root:
        if field not in data:
            print(f"❌ Root field missing: {field}")
            sys.exit(1)

    if not data["tokens"]:
        print("❌ Empty tokens array")
        sys.exit(1)

    # Validation étendue
    for token in data["tokens"]:
        for field in required_token:
            if field not in token:
                print(f"❌ Token missing field: {field}")
                sys.exit(1)
        
        if not validate_eth_address(token["address"]):
            print(f"❌ Invalid Ethereum address: {token['address']}")
            sys.exit(1)

        if not isinstance(token["decimals"], int):
            print(f"❌ Decimals must be integer for token: {token['symbol']}")
            sys.exit(1)

    print("✅ All validations passed")
    EOF